version: '3.3'
services: 
  mongodb:
    container_name: cAndD_mongodb
    build:
        context: ./mongodb
        dockerfile: Dockerfile
    ports: 
      - "27017:27017"
    volumes:
      - ./mongodb/data:/data/db
  redis:
    container_name: cAndD_redis
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data/db
  postgresql:
    container_name: cAndD_postgresql
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql/data:/data/db
  advertismentservice:
    container_name: advertisment_service
    restart: on-failure
    build:
      context: ./advertisementservice
      dockerfile: Dockerfile
    ports:
      - "8010:8080"
  userservice:
    container_name: user_service
    restart: on-failure
    build:
      context: ./userservice
      dockerfile: Dockerfile
    ports:
      - "8011:8080"
  contentservice:
    container_name: content_service
    restart: on-failure
    build:
      context: ./contentservice
      dockerfile: Dockerfile
    ports:
      - "8012:8080"
  inflationservice:
    container_name: inflation_service
    restart: on-failure
    build:
      context: ./inflationservice
      dockerfile: Dockerfile
    ports:
      - "8013:8080"
  keycloak:
    container_name: cAndD_keycloak_service
    build:
      context: ./keycloakService
      dockerfile: Dockerfile
    ports:
      - "8015:8080"
    volumes:
      - ./postgresql/data:/data/db
  #chatservice:
  #  container_name: chat_service
  #  restart: on-failure
  #  build:
  #    context: ./chatservice
  #    dockerfile: Dockerfile
  #  ports:
  #    - "8014:8080"

  # Probably not needed
  # databaseservice:
  #   container_name: database_service
  #   restart: on-failure
  #   build:
  #     context: ./databaseservice
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
      